name: Semantic Release and Notify SDK Update

on:
  push:
    branches:
      - develop # for pre-releases
      - main # for releases

permissions:
  contents: read # for checkout

jobs:
  semantic-release-and-notify-sdk-update:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install -g npm@8.5.2 node-pre-gyp
          npm install --legacy-peer-deps
          npm --version
          node --version

      - name: Build
        run: npm run build

      - name: Semantic release
        uses: codfish/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        ## Uncomment for local testing
        # with:
        #   dry_run: true

      ## This step is only for testing purposes to simulate the outputs of the semantic-release action
      ## comment out the semantic-release action above and uncomment this step to test
      # - name: Populate dummy outputs for testing
      #   id: semantic
      #   run: |
      #     echo "::set-output name=new-release-published::true"
      #     echo "::set-output name=release-version::3.5.1"
      #     echo "::set-output name=release-notes:: Added new feature X\n- Fixed bug Y\n- Improved performance of Z"
      #     echo "::set-output name=release-type::minor"

      - name: Construct event payload
        id: construct-event-payload
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          RELEASE_NOTES=$(echo -n "${{ steps.semantic.outputs.release-notes }}" | base64) 
          PAYLOAD=$(node -pe "JSON.stringify({
            version: '${{ steps.semantic.outputs.release-version }}',
            sha: '${{ github.sha }}',
            release_notes: \`$RELEASE_NOTES\`,
            release_type: '${{ steps.semantic.outputs.release-type }}'
          })")

          echo "::set-output name=event-payload-json::$PAYLOAD"

      - name: Notify SDK Update using repository dispatch
        if: steps.semantic.outputs.new-release-published == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_PAT }}
          repository: B2tGame/streaming-games
          event-type: sdk_update
          client-payload: ${{ steps.construct-event-payload.outputs.event-payload-json }}
