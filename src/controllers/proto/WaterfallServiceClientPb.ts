/**
 * @fileoverview gRPC-Web generated client stub for waterfall
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: waterfall.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as waterfall_pb from './waterfall_pb'; // proto import: "waterfall.proto"

export class WaterfallClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(hostname: string, credentials?: null | { [index: string]: string }, options?: null | { [index: string]: any }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorPull = new grpcWeb.MethodDescriptor(
    '/waterfall.Waterfall/Pull',
    grpcWeb.MethodType.SERVER_STREAMING,
    waterfall_pb.Transfer,
    waterfall_pb.Transfer,
    (request: waterfall_pb.Transfer) => {
      return request.serializeBinary();
    },
    waterfall_pb.Transfer.deserializeBinary
  );

  pull(request: waterfall_pb.Transfer, metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<waterfall_pb.Transfer> {
    return this.client_.serverStreaming(this.hostname_ + '/waterfall.Waterfall/Pull', request, metadata || {}, this.methodDescriptorPull);
  }

  methodDescriptorVersion = new grpcWeb.MethodDescriptor(
    '/waterfall.Waterfall/Version',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    waterfall_pb.VersionMessage,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    waterfall_pb.VersionMessage.deserializeBinary
  );

  version(request: google_protobuf_empty_pb.Empty, metadata: grpcWeb.Metadata | null): Promise<waterfall_pb.VersionMessage>;

  version(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: waterfall_pb.VersionMessage) => void
  ): grpcWeb.ClientReadableStream<waterfall_pb.VersionMessage>;

  version(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: waterfall_pb.VersionMessage) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/waterfall.Waterfall/Version',
        request,
        metadata || {},
        this.methodDescriptorVersion,
        callback
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/waterfall.Waterfall/Version', request, metadata || {}, this.methodDescriptorVersion);
  }
}

export class PortForwarderClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(hostname: string, credentials?: null | { [index: string]: string }, options?: null | { [index: string]: any }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorForwardPort = new grpcWeb.MethodDescriptor(
    '/waterfall.PortForwarder/ForwardPort',
    grpcWeb.MethodType.UNARY,
    waterfall_pb.PortForwardRequest,
    google_protobuf_empty_pb.Empty,
    (request: waterfall_pb.PortForwardRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  forwardPort(request: waterfall_pb.PortForwardRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  forwardPort(
    request: waterfall_pb.PortForwardRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: google_protobuf_empty_pb.Empty) => void
  ): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  forwardPort(
    request: waterfall_pb.PortForwardRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: google_protobuf_empty_pb.Empty) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/waterfall.PortForwarder/ForwardPort',
        request,
        metadata || {},
        this.methodDescriptorForwardPort,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/waterfall.PortForwarder/ForwardPort',
      request,
      metadata || {},
      this.methodDescriptorForwardPort
    );
  }

  methodDescriptorStop = new grpcWeb.MethodDescriptor(
    '/waterfall.PortForwarder/Stop',
    grpcWeb.MethodType.UNARY,
    waterfall_pb.PortForwardRequest,
    google_protobuf_empty_pb.Empty,
    (request: waterfall_pb.PortForwardRequest) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  stop(request: waterfall_pb.PortForwardRequest, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  stop(
    request: waterfall_pb.PortForwardRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: google_protobuf_empty_pb.Empty) => void
  ): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  stop(
    request: waterfall_pb.PortForwardRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: google_protobuf_empty_pb.Empty) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/waterfall.PortForwarder/Stop',
        request,
        metadata || {},
        this.methodDescriptorStop,
        callback
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/waterfall.PortForwarder/Stop', request, metadata || {}, this.methodDescriptorStop);
  }

  methodDescriptorStopAll = new grpcWeb.MethodDescriptor(
    '/waterfall.PortForwarder/StopAll',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    google_protobuf_empty_pb.Empty,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_empty_pb.Empty.deserializeBinary
  );

  stopAll(request: google_protobuf_empty_pb.Empty, metadata: grpcWeb.Metadata | null): Promise<google_protobuf_empty_pb.Empty>;

  stopAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: google_protobuf_empty_pb.Empty) => void
  ): grpcWeb.ClientReadableStream<google_protobuf_empty_pb.Empty>;

  stopAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: google_protobuf_empty_pb.Empty) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/waterfall.PortForwarder/StopAll',
        request,
        metadata || {},
        this.methodDescriptorStopAll,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + '/waterfall.PortForwarder/StopAll',
      request,
      metadata || {},
      this.methodDescriptorStopAll
    );
  }

  methodDescriptorList = new grpcWeb.MethodDescriptor(
    '/waterfall.PortForwarder/List',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    waterfall_pb.ForwardedSessions,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    waterfall_pb.ForwardedSessions.deserializeBinary
  );

  list(request: google_protobuf_empty_pb.Empty, metadata: grpcWeb.Metadata | null): Promise<waterfall_pb.ForwardedSessions>;

  list(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError, response: waterfall_pb.ForwardedSessions) => void
  ): grpcWeb.ClientReadableStream<waterfall_pb.ForwardedSessions>;

  list(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError, response: waterfall_pb.ForwardedSessions) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + '/waterfall.PortForwarder/List',
        request,
        metadata || {},
        this.methodDescriptorList,
        callback
      );
    }
    return this.client_.unaryCall(this.hostname_ + '/waterfall.PortForwarder/List', request, metadata || {}, this.methodDescriptorList);
  }
}
