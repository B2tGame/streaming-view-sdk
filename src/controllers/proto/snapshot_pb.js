// source: snapshot.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.emulator_snapshot.Config', null, global);
goog.exportSymbol('proto.emulator_snapshot.Host', null, global);
goog.exportSymbol('proto.emulator_snapshot.Image', null, global);
goog.exportSymbol('proto.emulator_snapshot.Image.Type', null, global);
goog.exportSymbol('proto.emulator_snapshot.SaveStats', null, global);
goog.exportSymbol('proto.emulator_snapshot.Snapshot', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.emulator_snapshot.Image = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.emulator_snapshot.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.emulator_snapshot.Image.displayName = 'proto.emulator_snapshot.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.emulator_snapshot.Host = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.emulator_snapshot.Host, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.emulator_snapshot.Host.displayName = 'proto.emulator_snapshot.Host';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.emulator_snapshot.Config = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.emulator_snapshot.Config.repeatedFields_, null);
};
goog.inherits(proto.emulator_snapshot.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.emulator_snapshot.Config.displayName = 'proto.emulator_snapshot.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.emulator_snapshot.SaveStats = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.emulator_snapshot.SaveStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.emulator_snapshot.SaveStats.displayName = 'proto.emulator_snapshot.SaveStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.emulator_snapshot.Snapshot = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.emulator_snapshot.Snapshot.repeatedFields_, null);
};
goog.inherits(proto.emulator_snapshot.Snapshot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.emulator_snapshot.Snapshot.displayName = 'proto.emulator_snapshot.Snapshot';
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.emulator_snapshot.Image.prototype.toObject = function (opt_includeInstance) {
    return proto.emulator_snapshot.Image.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.emulator_snapshot.Image} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.emulator_snapshot.Image.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        type: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
        path: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
        present: (f = jspb.Message.getBooleanField(msg, 3)) == null ? undefined : f,
        size: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
        modificationTime: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.emulator_snapshot.Image}
 */
proto.emulator_snapshot.Image.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.emulator_snapshot.Image();
  return proto.emulator_snapshot.Image.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.emulator_snapshot.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.emulator_snapshot.Image}
 */
proto.emulator_snapshot.Image.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.emulator_snapshot.Image.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setPath(value);
        break;
      case 3:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setPresent(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setSize(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setModificationTime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.emulator_snapshot.Image.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.emulator_snapshot.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.emulator_snapshot.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.emulator_snapshot.Image.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.emulator_snapshot.Image.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(1, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(2, f);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(3, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(4, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(5, f);
  }
};

/**
 * @enum {number}
 */
proto.emulator_snapshot.Image.Type = {
  IMAGE_TYPE_UNKNOWN: 0,
  IMAGE_TYPE_KERNEL: 1,
  IMAGE_TYPE_KERNEL_RANCHU: 2,
  IMAGE_TYPE_SYSTEM: 3,
  IMAGE_TYPE_SYSTEM_COPY: 4,
  IMAGE_TYPE_DATA: 5,
  IMAGE_TYPE_DATA_COPY: 6,
  IMAGE_TYPE_RAMDISK: 7,
  IMAGE_TYPE_SDCARD: 8,
  IMAGE_TYPE_CACHE: 9,
  IMAGE_TYPE_VENDOR: 10,
  IMAGE_TYPE_ENCRYPTION_KEY: 11,
};

/**
 * optional Type type = 1;
 * @return {!proto.emulator_snapshot.Image.Type}
 */
proto.emulator_snapshot.Image.prototype.getType = function () {
  return /** @type {!proto.emulator_snapshot.Image.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {!proto.emulator_snapshot.Image.Type} value
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.setType = function (value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.clearType = function () {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Image.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional string path = 2;
 * @return {string}
 */
proto.emulator_snapshot.Image.prototype.getPath = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''));
};

/**
 * @param {string} value
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.setPath = function (value) {
  return jspb.Message.setField(this, 2, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.clearPath = function () {
  return jspb.Message.setField(this, 2, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Image.prototype.hasPath = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional bool present = 3;
 * @return {boolean}
 */
proto.emulator_snapshot.Image.prototype.getPresent = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};

/**
 * @param {boolean} value
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.setPresent = function (value) {
  return jspb.Message.setField(this, 3, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.clearPresent = function () {
  return jspb.Message.setField(this, 3, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Image.prototype.hasPresent = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.emulator_snapshot.Image.prototype.getSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.setSize = function (value) {
  return jspb.Message.setField(this, 4, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.clearSize = function () {
  return jspb.Message.setField(this, 4, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Image.prototype.hasSize = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional int64 modification_time = 5;
 * @return {number}
 */
proto.emulator_snapshot.Image.prototype.getModificationTime = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.setModificationTime = function (value) {
  return jspb.Message.setField(this, 5, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Image} returns this
 */
proto.emulator_snapshot.Image.prototype.clearModificationTime = function () {
  return jspb.Message.setField(this, 5, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Image.prototype.hasModificationTime = function () {
  return jspb.Message.getField(this, 5) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.emulator_snapshot.Host.prototype.toObject = function (opt_includeInstance) {
    return proto.emulator_snapshot.Host.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.emulator_snapshot.Host} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.emulator_snapshot.Host.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        gpuDriver: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
        hypervisor: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.emulator_snapshot.Host}
 */
proto.emulator_snapshot.Host.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.emulator_snapshot.Host();
  return proto.emulator_snapshot.Host.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.emulator_snapshot.Host} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.emulator_snapshot.Host}
 */
proto.emulator_snapshot.Host.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setGpuDriver(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setHypervisor(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.emulator_snapshot.Host.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.emulator_snapshot.Host.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.emulator_snapshot.Host} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.emulator_snapshot.Host.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(4, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(5, f);
  }
};

/**
 * optional string gpu_driver = 4;
 * @return {string}
 */
proto.emulator_snapshot.Host.prototype.getGpuDriver = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''));
};

/**
 * @param {string} value
 * @return {!proto.emulator_snapshot.Host} returns this
 */
proto.emulator_snapshot.Host.prototype.setGpuDriver = function (value) {
  return jspb.Message.setField(this, 4, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Host} returns this
 */
proto.emulator_snapshot.Host.prototype.clearGpuDriver = function () {
  return jspb.Message.setField(this, 4, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Host.prototype.hasGpuDriver = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional int32 hypervisor = 5;
 * @return {number}
 */
proto.emulator_snapshot.Host.prototype.getHypervisor = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Host} returns this
 */
proto.emulator_snapshot.Host.prototype.setHypervisor = function (value) {
  return jspb.Message.setField(this, 5, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Host} returns this
 */
proto.emulator_snapshot.Host.prototype.clearHypervisor = function () {
  return jspb.Message.setField(this, 5, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Host.prototype.hasHypervisor = function () {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.emulator_snapshot.Config.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.emulator_snapshot.Config.prototype.toObject = function (opt_includeInstance) {
    return proto.emulator_snapshot.Config.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.emulator_snapshot.Config} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.emulator_snapshot.Config.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        enabledFeaturesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
        selectedRenderer: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
        cpuCoreCount: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
        ramSizeBytes: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.emulator_snapshot.Config}
 */
proto.emulator_snapshot.Config.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.emulator_snapshot.Config();
  return proto.emulator_snapshot.Config.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.emulator_snapshot.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.emulator_snapshot.Config}
 */
proto.emulator_snapshot.Config.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.addEnabledFeatures(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSelectedRenderer(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setCpuCoreCount(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setRamSizeBytes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.emulator_snapshot.Config.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.emulator_snapshot.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.emulator_snapshot.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.emulator_snapshot.Config.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getEnabledFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(1, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(2, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(3, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(4, f);
  }
};

/**
 * repeated int32 enabled_features = 1;
 * @return {!Array<number>}
 */
proto.emulator_snapshot.Config.prototype.getEnabledFeaturesList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.setEnabledFeaturesList = function (value) {
  return jspb.Message.setField(this, 1, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.addEnabledFeatures = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.clearEnabledFeaturesList = function () {
  return this.setEnabledFeaturesList([]);
};

/**
 * optional int32 selected_renderer = 2;
 * @return {number}
 */
proto.emulator_snapshot.Config.prototype.getSelectedRenderer = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.setSelectedRenderer = function (value) {
  return jspb.Message.setField(this, 2, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.clearSelectedRenderer = function () {
  return jspb.Message.setField(this, 2, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Config.prototype.hasSelectedRenderer = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional int32 cpu_core_count = 3;
 * @return {number}
 */
proto.emulator_snapshot.Config.prototype.getCpuCoreCount = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.setCpuCoreCount = function (value) {
  return jspb.Message.setField(this, 3, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.clearCpuCoreCount = function () {
  return jspb.Message.setField(this, 3, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Config.prototype.hasCpuCoreCount = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional int64 ram_size_bytes = 4;
 * @return {number}
 */
proto.emulator_snapshot.Config.prototype.getRamSizeBytes = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.setRamSizeBytes = function (value) {
  return jspb.Message.setField(this, 4, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Config} returns this
 */
proto.emulator_snapshot.Config.prototype.clearRamSizeBytes = function () {
  return jspb.Message.setField(this, 4, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Config.prototype.hasRamSizeBytes = function () {
  return jspb.Message.getField(this, 4) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.emulator_snapshot.SaveStats.prototype.toObject = function (opt_includeInstance) {
    return proto.emulator_snapshot.SaveStats.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.emulator_snapshot.SaveStats} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.emulator_snapshot.SaveStats.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        incremental: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
        duration: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
        ramChangedBytes: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.emulator_snapshot.SaveStats}
 */
proto.emulator_snapshot.SaveStats.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.emulator_snapshot.SaveStats();
  return proto.emulator_snapshot.SaveStats.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.emulator_snapshot.SaveStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.emulator_snapshot.SaveStats}
 */
proto.emulator_snapshot.SaveStats.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setIncremental(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setDuration(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setRamChangedBytes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.emulator_snapshot.SaveStats.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.emulator_snapshot.SaveStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.emulator_snapshot.SaveStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.emulator_snapshot.SaveStats.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(1, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(2, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(3, f);
  }
};

/**
 * optional uint32 incremental = 1;
 * @return {number}
 */
proto.emulator_snapshot.SaveStats.prototype.getIncremental = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.SaveStats} returns this
 */
proto.emulator_snapshot.SaveStats.prototype.setIncremental = function (value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.SaveStats} returns this
 */
proto.emulator_snapshot.SaveStats.prototype.clearIncremental = function () {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.SaveStats.prototype.hasIncremental = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional uint64 duration = 2;
 * @return {number}
 */
proto.emulator_snapshot.SaveStats.prototype.getDuration = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.SaveStats} returns this
 */
proto.emulator_snapshot.SaveStats.prototype.setDuration = function (value) {
  return jspb.Message.setField(this, 2, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.SaveStats} returns this
 */
proto.emulator_snapshot.SaveStats.prototype.clearDuration = function () {
  return jspb.Message.setField(this, 2, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.SaveStats.prototype.hasDuration = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional uint64 ram_changed_bytes = 3;
 * @return {number}
 */
proto.emulator_snapshot.SaveStats.prototype.getRamChangedBytes = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.SaveStats} returns this
 */
proto.emulator_snapshot.SaveStats.prototype.setRamChangedBytes = function (value) {
  return jspb.Message.setField(this, 3, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.SaveStats} returns this
 */
proto.emulator_snapshot.SaveStats.prototype.clearRamChangedBytes = function () {
  return jspb.Message.setField(this, 3, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.SaveStats.prototype.hasRamChangedBytes = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.emulator_snapshot.Snapshot.repeatedFields_ = [3, 15];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.emulator_snapshot.Snapshot.prototype.toObject = function (opt_includeInstance) {
    return proto.emulator_snapshot.Snapshot.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.emulator_snapshot.Snapshot} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.emulator_snapshot.Snapshot.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        version: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
        creationTime: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
        imagesList: jspb.Message.toObjectList(msg.getImagesList(), proto.emulator_snapshot.Image.toObject, includeInstance),
        host: (f = msg.getHost()) && proto.emulator_snapshot.Host.toObject(includeInstance, f),
        config: (f = msg.getConfig()) && proto.emulator_snapshot.Config.toObject(includeInstance, f),
        failedToLoadReasonCode: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
        guestDataPartitionMounted: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
        rotation: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
        invalidLoads: (f = jspb.Message.getField(msg, 10)) == null ? undefined : f,
        successfulLoads: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
        logicalName: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
        parent: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
        description: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
        saveStatsList: jspb.Message.toObjectList(msg.getSaveStatsList(), proto.emulator_snapshot.SaveStats.toObject, includeInstance),
        folded: (f = jspb.Message.getBooleanField(msg, 16)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.emulator_snapshot.Snapshot}
 */
proto.emulator_snapshot.Snapshot.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.emulator_snapshot.Snapshot();
  return proto.emulator_snapshot.Snapshot.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.emulator_snapshot.Snapshot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.emulator_snapshot.Snapshot}
 */
proto.emulator_snapshot.Snapshot.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setVersion(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setCreationTime(value);
        break;
      case 3:
        var value = new proto.emulator_snapshot.Image();
        reader.readMessage(value, proto.emulator_snapshot.Image.deserializeBinaryFromReader);
        msg.addImages(value);
        break;
      case 4:
        var value = new proto.emulator_snapshot.Host();
        reader.readMessage(value, proto.emulator_snapshot.Host.deserializeBinaryFromReader);
        msg.setHost(value);
        break;
      case 5:
        var value = new proto.emulator_snapshot.Config();
        reader.readMessage(value, proto.emulator_snapshot.Config.deserializeBinaryFromReader);
        msg.setConfig(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readInt64());
        msg.setFailedToLoadReasonCode(value);
        break;
      case 8:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setGuestDataPartitionMounted(value);
        break;
      case 9:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setRotation(value);
        break;
      case 10:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setInvalidLoads(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readInt32());
        msg.setSuccessfulLoads(value);
        break;
      case 12:
        var value = /** @type {string} */ (reader.readString());
        msg.setLogicalName(value);
        break;
      case 13:
        var value = /** @type {string} */ (reader.readString());
        msg.setParent(value);
        break;
      case 14:
        var value = /** @type {string} */ (reader.readString());
        msg.setDescription(value);
        break;
      case 15:
        var value = new proto.emulator_snapshot.SaveStats();
        reader.readMessage(value, proto.emulator_snapshot.SaveStats.deserializeBinaryFromReader);
        msg.addSaveStats(value);
        break;
      case 16:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setFolded(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.emulator_snapshot.Snapshot.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.emulator_snapshot.Snapshot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.emulator_snapshot.Snapshot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.emulator_snapshot.Snapshot.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(1, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(2, f);
  }
  f = message.getImagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(3, f, proto.emulator_snapshot.Image.serializeBinaryToWriter);
  }
  f = message.getHost();
  if (f != null) {
    writer.writeMessage(4, f, proto.emulator_snapshot.Host.serializeBinaryToWriter);
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(5, f, proto.emulator_snapshot.Config.serializeBinaryToWriter);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeInt64(7, f);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(8, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(9, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeInt32(10, f);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeInt32(11, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(12, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(13, f);
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(14, f);
  }
  f = message.getSaveStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(15, f, proto.emulator_snapshot.SaveStats.serializeBinaryToWriter);
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(16, f);
  }
};

/**
 * optional int32 version = 1;
 * @return {number}
 */
proto.emulator_snapshot.Snapshot.prototype.getVersion = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setVersion = function (value) {
  return jspb.Message.setField(this, 1, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearVersion = function () {
  return jspb.Message.setField(this, 1, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasVersion = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * optional int64 creation_time = 2;
 * @return {number}
 */
proto.emulator_snapshot.Snapshot.prototype.getCreationTime = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setCreationTime = function (value) {
  return jspb.Message.setField(this, 2, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearCreationTime = function () {
  return jspb.Message.setField(this, 2, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasCreationTime = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * repeated Image images = 3;
 * @return {!Array<!proto.emulator_snapshot.Image>}
 */
proto.emulator_snapshot.Snapshot.prototype.getImagesList = function () {
  return /** @type{!Array<!proto.emulator_snapshot.Image>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.emulator_snapshot.Image, 3)
  );
};

/**
 * @param {!Array<!proto.emulator_snapshot.Image>} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setImagesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};

/**
 * @param {!proto.emulator_snapshot.Image=} opt_value
 * @param {number=} opt_index
 * @return {!proto.emulator_snapshot.Image}
 */
proto.emulator_snapshot.Snapshot.prototype.addImages = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.emulator_snapshot.Image, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearImagesList = function () {
  return this.setImagesList([]);
};

/**
 * optional Host host = 4;
 * @return {?proto.emulator_snapshot.Host}
 */
proto.emulator_snapshot.Snapshot.prototype.getHost = function () {
  return /** @type{?proto.emulator_snapshot.Host} */ (jspb.Message.getWrapperField(this, proto.emulator_snapshot.Host, 4));
};

/**
 * @param {?proto.emulator_snapshot.Host|undefined} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setHost = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearHost = function () {
  return this.setHost(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasHost = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional Config config = 5;
 * @return {?proto.emulator_snapshot.Config}
 */
proto.emulator_snapshot.Snapshot.prototype.getConfig = function () {
  return /** @type{?proto.emulator_snapshot.Config} */ (jspb.Message.getWrapperField(this, proto.emulator_snapshot.Config, 5));
};

/**
 * @param {?proto.emulator_snapshot.Config|undefined} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setConfig = function (value) {
  return jspb.Message.setWrapperField(this, 5, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearConfig = function () {
  return this.setConfig(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasConfig = function () {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * optional int64 failed_to_load_reason_code = 7;
 * @return {number}
 */
proto.emulator_snapshot.Snapshot.prototype.getFailedToLoadReasonCode = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setFailedToLoadReasonCode = function (value) {
  return jspb.Message.setField(this, 7, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearFailedToLoadReasonCode = function () {
  return jspb.Message.setField(this, 7, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasFailedToLoadReasonCode = function () {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * optional bool guest_data_partition_mounted = 8;
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.getGuestDataPartitionMounted = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};

/**
 * @param {boolean} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setGuestDataPartitionMounted = function (value) {
  return jspb.Message.setField(this, 8, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearGuestDataPartitionMounted = function () {
  return jspb.Message.setField(this, 8, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasGuestDataPartitionMounted = function () {
  return jspb.Message.getField(this, 8) != null;
};

/**
 * optional int32 rotation = 9;
 * @return {number}
 */
proto.emulator_snapshot.Snapshot.prototype.getRotation = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setRotation = function (value) {
  return jspb.Message.setField(this, 9, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearRotation = function () {
  return jspb.Message.setField(this, 9, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasRotation = function () {
  return jspb.Message.getField(this, 9) != null;
};

/**
 * optional int32 invalid_loads = 10;
 * @return {number}
 */
proto.emulator_snapshot.Snapshot.prototype.getInvalidLoads = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setInvalidLoads = function (value) {
  return jspb.Message.setField(this, 10, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearInvalidLoads = function () {
  return jspb.Message.setField(this, 10, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasInvalidLoads = function () {
  return jspb.Message.getField(this, 10) != null;
};

/**
 * optional int32 successful_loads = 11;
 * @return {number}
 */
proto.emulator_snapshot.Snapshot.prototype.getSuccessfulLoads = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};

/**
 * @param {number} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setSuccessfulLoads = function (value) {
  return jspb.Message.setField(this, 11, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearSuccessfulLoads = function () {
  return jspb.Message.setField(this, 11, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasSuccessfulLoads = function () {
  return jspb.Message.getField(this, 11) != null;
};

/**
 * optional string logical_name = 12;
 * @return {string}
 */
proto.emulator_snapshot.Snapshot.prototype.getLogicalName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ''));
};

/**
 * @param {string} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setLogicalName = function (value) {
  return jspb.Message.setField(this, 12, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearLogicalName = function () {
  return jspb.Message.setField(this, 12, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasLogicalName = function () {
  return jspb.Message.getField(this, 12) != null;
};

/**
 * optional string parent = 13;
 * @return {string}
 */
proto.emulator_snapshot.Snapshot.prototype.getParent = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ''));
};

/**
 * @param {string} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setParent = function (value) {
  return jspb.Message.setField(this, 13, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearParent = function () {
  return jspb.Message.setField(this, 13, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasParent = function () {
  return jspb.Message.getField(this, 13) != null;
};

/**
 * optional string description = 14;
 * @return {string}
 */
proto.emulator_snapshot.Snapshot.prototype.getDescription = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ''));
};

/**
 * @param {string} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setDescription = function (value) {
  return jspb.Message.setField(this, 14, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearDescription = function () {
  return jspb.Message.setField(this, 14, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasDescription = function () {
  return jspb.Message.getField(this, 14) != null;
};

/**
 * repeated SaveStats save_stats = 15;
 * @return {!Array<!proto.emulator_snapshot.SaveStats>}
 */
proto.emulator_snapshot.Snapshot.prototype.getSaveStatsList = function () {
  return /** @type{!Array<!proto.emulator_snapshot.SaveStats>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.emulator_snapshot.SaveStats, 15)
  );
};

/**
 * @param {!Array<!proto.emulator_snapshot.SaveStats>} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setSaveStatsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 15, value);
};

/**
 * @param {!proto.emulator_snapshot.SaveStats=} opt_value
 * @param {number=} opt_index
 * @return {!proto.emulator_snapshot.SaveStats}
 */
proto.emulator_snapshot.Snapshot.prototype.addSaveStats = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 15, opt_value, proto.emulator_snapshot.SaveStats, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearSaveStatsList = function () {
  return this.setSaveStatsList([]);
};

/**
 * optional bool folded = 16;
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.getFolded = function () {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};

/**
 * @param {boolean} value
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.setFolded = function (value) {
  return jspb.Message.setField(this, 16, value);
};

/**
 * Clears the field making it undefined.
 * @return {!proto.emulator_snapshot.Snapshot} returns this
 */
proto.emulator_snapshot.Snapshot.prototype.clearFolded = function () {
  return jspb.Message.setField(this, 16, undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.emulator_snapshot.Snapshot.prototype.hasFolded = function () {
  return jspb.Message.getField(this, 16) != null;
};

goog.object.extend(exports, proto.emulator_snapshot);
